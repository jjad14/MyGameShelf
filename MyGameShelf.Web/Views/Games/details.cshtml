@using MyGameShelf.Web.Helpers
@using MyGameShelf.Web.ViewModels

@model GameDetailsViewModel

@Html.AntiForgeryToken()

@{
    ViewData["Title"] = Model.Game.Name;
}

<div class="container mt-4">
    <div class="row mb-2">
        <a asp-action="Index"
           asp-route-search="@ViewBag.Search"
           asp-route-platform="@ViewBag.Platform"
           asp-route-genre="@ViewBag.Genre"
           asp-route-metacritic="@ViewBag.Metacritic"
           asp-route-orderBy="@ViewBag.OrderBy"
           asp-route-page="@ViewBag.Page"
           asp-route-pageSize="@ViewBag.PageSize"
           class="btn btn-outline-secondary mt-4">
            ← Back to Game List
        </a>
    </div>
    <div class="row g-4">
        <!-- Game Image -->
        <div class="col-md-5 d-flex flex-column">
            <div class="position-relative">
                <img src="@Model.Game.BackgroundImage"
                     alt="@Model.Game.Name"
                     class="img-fluid rounded shadow"
                     style="max-height: 500px; object-fit: cover; width: 100%;" />

                <button type="button" id="favoriteBtn" class="btn btn-link p-0 position-absolute top-0 end-0 m-2"
                        style="color: white; font-size: 2rem;">
                    <i class="fa-regular fa-star"></i>
                </button>
            </div>

            <hr />

            <form method="post" asp-controller="GameList" asp-action="@(Model.AddToList != null ? "Update" : "Add")" class="">
                <input type="hidden" name="AddToList.GameId" value="@Model.Game.Id" />

                <div class="mb-3">
                    <label for="GameStatus" class="form-label">Game Status</label>
                    <select asp-for="AddToList.GameStatus" asp-items="Model.GameStatusOptions" class="form-select">
                        <option value="">Select status...</option>
                    </select>
                </div>

                <div class="mb-3">
                    <div class="mb-3">
                        <label asp-for="AddToList.Rating" class="form-label"></label>
                        <select asp-for="AddToList.Rating" asp-items="Model.RatingOptions" class="form-select">
                            <option value="">Select rating...</option>
                        </select>
                        <span asp-validation-for="AddToList.Rating" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <div class="mb-3">
                        <label asp-for="AddToList.Difficulty" class="form-label"></label>
                        <select asp-for="AddToList.Difficulty" asp-items="Model.DifficultyOptions" class="form-select">
                            <option value="">Select difficulty...</option>
                        </select>
                        <span asp-validation-for="AddToList.Difficulty" class="text-danger"></span>
                    </div>
                </div>

                <input type="hidden" asp-for="AddToList.IsRecommendedSpecified" value="true" />

                <div class="form-check mb-3">
                    <input asp-for="AddToList.IsRecommended" class="form-check-input" type="checkbox" id="IsRecommended" />
                    <label class="form-check-label" for="IsRecommended">
                        I recommend this game
                    </label>
                    <span asp-validation-for="AddToList.IsRecommended" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="AddToList.Review" class="form-label"></label>
                    <textarea asp-for="AddToList.Review" class="form-control" rows="4" placeholder="Write your review here..."></textarea>
                    <span asp-validation-for="AddToList.Review" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100 btn-sm">
                    @(Model.AddToList != null ? "Update Game Entry" : "Add to My Games")
                </button>
            </form>


        </div>

        <!-- Game Info -->
        <div class="col-md-7">
            <h2 class="mb-1">
                @Model.Game.Name @(Model.Game.Released.HasValue ? $"({Model.Game.Released.Value.Year})" : "")
            </h2>

            @if (Model.Game.Metacritic.HasValue && Model.Game.Metacritic > 0)
            {
                <span class="badge"
                      style="background-color:@MetacriticHelper.GetMetacriticColor(Model.Game.Metacritic.Value);
                                color:white;
                                border: 2px solid @MetacriticHelper.GetMetacriticBorder(Model.Game.Metacritic.Value);
                                text-align: center;
                                display: inline-block;">
                    <span>Metacritic: </span>
                    <strong>@Model.Game.Metacritic</strong>
                </span>
            }

            <p class="mt-3">@Model.Game.Description</p>

            <div class="mb-2">
                <strong>ESRB Rating:</strong> @Model.Game.EsrbRating
            </div>

            @if (Model.Game.Platforms?.Any() == true)
            {
                <div class="mb-2">
                    <strong>Platforms:</strong><br />
                    @foreach (var platform in Model.Game.Platforms)
                    {
                        var p = platform.ToLower();
                        var color = p.Contains("playstation") ? "#003791" :
                        p.Contains("xbox") ? "#107C10" :
                        p.Contains("nintendo") ? "#E60012" :
                        p.Contains("pc") ? "#6f42c1" :
                        "#fd7e14";

                        <span class="badge me-1" style="background-color:@color; color:white;">@platform</span>
                    }
                </div>
            }

            @if (Model.Game.Genres?.Any() == true)
            {
                <div class="mb-2">
                    <strong>Genres:</strong><br />
                    @foreach (var genre in Model.Game.Genres)
                    {
                        <span class="badge bg-warning text-dark me-1">@genre</span>
                    }
                </div>
            }

            @if (Model.Game.Tags?.Any() == true)
            {
                <div class="mb-2">
                    <strong>Tags:</strong><br />
                    @foreach (var tag in Model.Game.Tags)
                    {
                        <span class="badge me-1" style="background-color: #20c997; color: white;">@tag</span>
                    }
                </div>
            }

            @if (Model.Game.Developers?.Any() == true)
            {
                <div class="mb-2">
                    <strong>Developer(s):</strong> @string.Join(", ", Model.Game.Developers)
                </div>
            }

            @if (Model.Game.Publishers?.Any() == true)
            {
            <div class="mb-2">
                <strong>Publisher(s):</strong>
                @string.Join(", ", Model.Game.Publishers
                                .Where(p => !string.IsNullOrEmpty(p.Name))
                                .Select(p => p.Name))
            </div>
                        }
        </div>
    </div>
</div>

@if (Model.HasSequels)
{
    <hr />
    <button class="btn btn-link no-shadow d-inline-flex align-items-center gap-1"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#gamesSequelsCollapse"
            aria-expanded="false"
            aria-controls="gamesSequelsCollapse"
            onclick="loadGameSequels()">
        Related Games in the Series
        <i class="fa-solid fa-chevron-down"></i>
    </button>

    <div class="collapse mt-2" id="gamesSequelsCollapse">
        <div id="gameSequelsContent" class="d-flex flex-wrap gap-3">
            <p>Loading...</p>
        </div>
    </div>
}


@if (Model.HasAdditions)
{
    <hr />
    <button class="btn btn-link no-shadow d-inline-flex align-items-center gap-1"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#gamesDLCsCollapse"
            aria-expanded="false"
            aria-controls="gamesDLCsCollapse"
            onclick="loadGameDLCs()">
        Downloadable Content (DLC) & Extras
        <i class="fa-solid fa-chevron-down"></i>
    </button>

    <div class="collapse mt-2" id="gamesDLCsCollapse">
        <div id="gameDLCsContent" class="d-flex flex-wrap gap-3">
            <p>Loading...</p>
        </div>
    </div>
}

@if (Model.HasRelatedGames && !string.IsNullOrWhiteSpace(Model.PublisherIdsString))
{
    <hr />
    <button class="btn btn-link no-shadow d-inline-flex align-items-center gap-1"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#gamesByPublisherCollapse"
            aria-expanded="false"
            aria-controls="gamesByPublisherCollapse"
            onclick="loadGamesByPublisher('@Model.PublisherIdsString')">
        Show Other Games by Publisher(s)
        <i class="fa-solid fa-chevron-down"></i>
    </button>

    <div class="collapse mt-2" id="gamesByPublisherCollapse">
        <div id="gamesByPublisherContent" class="d-flex flex-wrap gap-3">
            <p>Loading...</p>
        </div>
    </div>
}

@if (Model.Game.PlatformRequirements?.Any(pr =>
        !string.IsNullOrWhiteSpace(pr.MinimumRequirements) ||
        !string.IsNullOrWhiteSpace(pr.RecommendedRequirements)) == true)
{
    <hr />
    <div class="mb-2">
        <strong>System Requirements:</strong>

        @foreach (var req in Model.Game.PlatformRequirements
            .Where(pr => !string.IsNullOrWhiteSpace(pr.MinimumRequirements) || !string.IsNullOrWhiteSpace(pr.RecommendedRequirements)))
        {
            <div class="mt-2">
                <h6>@req.Name</h6>

                @if (!string.IsNullOrWhiteSpace(req.MinimumRequirements))
                {
                    <p class="mb-1"><strong>Minimum:</strong><br />@Html.Raw(req.MinimumRequirements)</p>
                }

                @if (!string.IsNullOrWhiteSpace(req.RecommendedRequirements))
                {
                    <p><strong>Recommended:</strong><br />@Html.Raw(req.RecommendedRequirements)</p>
                }
            </div>
        }
    </div>
}

<div id="game-data" class="d-none" data-game-id="@Model.Game.Id"></div>

@section Scripts {
    <script src="~/js/games/game-details.js"></script>
}
