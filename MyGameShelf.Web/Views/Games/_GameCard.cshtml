@using MyGameShelf.Web.Helpers
@using MyGameShelf.Application.DTOs
@model GameDto

@if (Model == null)
{
    @for (int i = 0; i < 6; i++)
    {
        <partial name="_GameCardSkeleton" />
    }
}
else
{
    <div class="col">
        <div class="card h-100" style="width: 18rem;">
            <div class="position-relative">
                <img src="@Model.BackgroundImage" class="card-img-top" alt="@Model.Name" style="height: 200px; object-fit: cover;">
                @if (Model.Metacritic.HasValue && Model.Metacritic > 0)
                {
                    var metacriticScore = Model.Metacritic;

                    <span class="badge position-absolute top-0 end-0 m-2 text-dark"
                          style="background-color:@MetacriticHelper.GetMetacriticColor(Model.Metacritic.Value); 
                                font-size: 0.85rem; 
                                border-radius: 25%; 
                                border: 2px solid @MetacriticHelper.GetMetacriticBorder(Model.Metacritic.Value);">
                        <strong>@Model.Metacritic</strong>
                    </span>
                }
            </div>

            <div class="card-body d-flex flex-column">
                <h5 class="card-title">@Model.Name @(Model.Released.HasValue ? $"({Model.Released.Value.Year})" : "")</h5>
                <hr />
                @if (Model.Platforms != null && Model.Platforms.Any())
                {
                    <div class="mb-1">
                        <strong>Platforms:</strong>
                        @foreach (var platform in Model.Platforms)
                        {
                            var platformName = platform.ToLower();
                            var badgeColor = platformName switch
                            {
                                var p when p.ToLower().Contains("playstation") => "#003791",   // PlayStation
                                var p when p.ToLower().Contains("xbox") => "#107C10",           // Xbox
                                var p when p.ToLower().Contains("nintendo") => "#E60012",       // Nintendo
                                var p when p.ToLower().Contains("pc") || p.Contains("windows") => "#6f42c1", // PC
                                _ => "#fd7e14"                                        // Other
                            };

                            <span class="badge me-1" style="background-color:@badgeColor; color: white;">@platform</span>
                        }
                    </div>
                }

                <a href="@Url.Action("Details", "Games", new {
                    id = Model.Id,
                    search = Model.Search,
                    platform = Model.Platform,
                    genre = Model.Genre,
                    metacritic = Model.MetacriticFilter,
                    orderBy = Model.OrderBy,
                    page = Model.Page,
                    pageSize = Model.PageSize
                })" class="btn btn-sm btn-primary w-100">
                    View Game
                </a>

            </div>
            <div class="card-footer bg-transparent border-top-0">
                <button class="btn btn-link text-decoration-none w-100"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#collapseDetails-@Model.Id"
                        aria-expanded="false"
                        aria-controls="collapseDetails-@Model.Id"
                        style="background-color: #f8f9fa; padding: 0.25rem 0.5rem; border-radius: 0.25rem; height: 32px;">
                    Show Details <i class="fas fa-chevron-down ms-1"></i>
                </button>
                <div class="collapse mt-2" id="collapseDetails-@Model.Id">
                    @if (Model.Genres != null && Model.Genres.Any())
                    {
                        <div class="mb-2">
                            <strong>Genres:</strong>
                            <div>
                                @foreach (var genre in Model.Genres.Take(3))
                                {
                                    <span class="badge me-1" style="background-color: #ffc107; color: black;">@genre</span>
                                }
                            </div>
                        </div>
                    }

                    @if (Model.Tags != null && Model.Tags.Any())
                    {
                        <div>
                            <strong>Tags:</strong>
                            <div>
                                @foreach (var tag in Model.Tags.Take(10))
                                {
                                    <span class="badge me-1" style="background-color: #20c997; color: black;">@tag</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>




}
