@using MyGameShelf.Web.ViewModels

@model PaginatedGamesViewModel

@{
    ViewData["Title"] = "Game List";
}

<partial name="_GameFilterBar" />

<div class="container">
    <div class="row gap-2">
        @if (Model == null || !Model.Games.Any())
        {
            <!-- Skeleton Loader -->
            @for (int i = 0; i < 12; i++)
            {
                <div class="col mb-4">
                    <div class="card placeholder-glow" style="width: 18rem;">
                        <div class="card-img-top placeholder" style="height: 180px;"></div>
                        <div class="card-body">
                            <h5 class="card-title placeholder col-6"></h5>
                            <p class="card-text placeholder col-8"></p>
                            <a href="#" class="btn btn-primary disabled placeholder col-6"></a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            @foreach(var game in Model.Games)
            {
                <partial name="_GameCard" model="game" />
            }
        }

    </div>

    @{
        int maxVisiblePages = 10;
        int startPage = Math.Max(1, Model.CurrentPage - maxVisiblePages / 2);
        int endPage = Math.Min(Model.TotalPages, startPage + maxVisiblePages - 1);

        // Adjust if we are near the end
        if (endPage - startPage < maxVisiblePages && startPage > 1)
        {
            startPage = Math.Max(1, endPage - maxVisiblePages + 1);
        }
    }

    <div class="row mt-4">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">

                <!-- Previous -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <!-- Page numbers -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
                }

                <!-- Next -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>

            </ul>
        </nav>
    </div>


</div>
