@using MyGameShelf.Web.ViewModels
@model UserGamesTabViewModel

@if (!Model.GamesWithFavorites.Any())
{
    <p class="text-muted">No games in this category.</p>
}
else
{
    <div class="row">
        @foreach (var userGame in Model.GamesWithFavorites)
        {
            <div class="col-md-4 mb-3">
                <div class="card h-100">
                    <div class="position-relative">
                        <img src="@userGame.UserGame.Game!.BackgroundImage" class="card-img-top" alt="@userGame.UserGame.Game.Name">

                        @if (Model.IsOwner)
                        {
                            <!-- Icons overlay (matching Game Details style) -->
                            <div class="position-absolute top-0 end-0 m-2 d-flex flex-column align-items-end gap-2">
                                <button type="button"
                                        class="btn btn-link p-0 favorite-toggle"
                                        data-game-id="@userGame.UserGame.Game.Id"
                                        data-favorited="@userGame.IsFavorited.ToString().ToLower()"
                                        title="Favorite"
                                        style="color: @(userGame.IsFavorited ? "#FFD700" : "white"); font-size: 1.5rem;">
                                    <i class="@(userGame.IsFavorited ? "fa-solid" : "fa-regular") fa-star"></i>
                                </button>

                                <button type="button"
                                        class="btn btn-link p-0 remove-game"
                                        title="Remove"
                                        data-game-id="@userGame.UserGame.Game.Id"
                                        data-user-id="@Model.UserId"
                                        style="color: red; font-size: 1.5rem;">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </div>                            
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@userGame.UserGame.Game.Name</h5>
                        <p>Status: @userGame.UserGame.Status</p>
                        <p>Rating: @userGame.UserGame.Rating</p>
                        <p>Difficulty: @userGame.UserGame.Difficulty</p>
                        <p>Added On: @userGame.UserGame.AddedOn.ToString("MMM dd, yyyy")</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a href="@Url.Action("Details", "Games", new { id = userGame.UserGame.Game.RawgId })" class="btn btn-sm btn-primary w-100">
                            View Game
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.TotalPages > 1)
    {
        <nav class="mt-4">
            <ul class="pagination game-pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link user-games-page" href="#" data-page="@(Model.CurrentPage - 1)">Previous</a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link user-games-page" href="#" data-page="@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link user-games-page" href="#" data-page="@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
}

@section Scripts 
{
    <script>
        $(document).on("click", ".remove-game", function () {
            if (!confirm("Are you sure you want to remove this game from your list?")) return;

            const gameId = $(this).data("game-id");
            const userId = $(this).data("user-id");
            const token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                type: "POST",
                url: "/GameList/RemoveGame",
                data: { gameId: gameId, userId: userId },
                headers: {
                    'RequestVerificationToken': token
                },
                success: function (response) {
                    if (response.success) {
                        // Refresh list (basic reload)
                        location.reload();
                    } else {
                        alert("Failed to remove game.");
                    }
                },
                error: function () {
                    alert("An error occurred while trying to remove the game.");
                }
            });
        });
    </script>

}

