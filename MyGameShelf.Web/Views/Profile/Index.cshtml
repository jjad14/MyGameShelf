@using MyGameShelf.Web.ViewModels
@model ProfileViewModel

@{
    ViewData["Title"] = $"{Model.Username ?? "User"}'s Profile";

    // Check if user viewing profile is Authenticated and if user is profile owner
    bool isOwner = User.Identity.IsAuthenticated && User.Identity.Name == Model.Username;

    // Check Last Active Status within the hour
    var lastActive = Model.LastActive;
    var now = DateTime.Now;
    var isWithinLastHour = (now - lastActive).TotalMinutes <= 60;
}

<div class="row">
    <div class="col-11 col-md-10">        
        <h4 class="text-center text-md-start mx-md-2">
            <i class="fa-solid fa-user"></i>
            <span class="ms-2">@Model.Username Profile</span>
        </h4>
    </div>
    <div class="col-1 col-md-2">
        @if (isOwner)
        {
            <a class="nav-link" asp-area="" asp-controller="Profile" asp-action="Settings" data-bs-toggle="tooltip" title="Go to account settings">
                <i class="fa-solid fa-gear"></i>
                <span class="ms-2 d-none d-md-inline">Account Settings</span>
            </a>
        }
    </div>
</div>

<div class="container mt-2 px-0">
    <div class="row">
        <!-- Left Sidebar (Profile Details) -->
        <div class="col-md-3 d-flex flex-column gap-3">
            <!-- Profile Picture -->
            <div class="text-center" style="width: 300px; height: 350px; margin: 0 auto;">
                <img src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) 
                                ? Url.Content("~/assets/img/user.jpg") 
                                : Model.ProfilePictureUrl)"  
                     alt="@Model.Username" 
                     class="rounded img-thumbnail" 
                     style="width: 100%; height: 100%; object-fit: cover; object-position: center;">
            </div>

            <!-- Profile Info -->
            <div class="bg-light text-dark rounded p-2">
                @if (isOwner || (!isOwner && Model.IsPublic))
                {
                    <h4 class="text-center text-md-start col-12 mb-3 ">@($"{Model.FirstName} {Model.LastName}")</h4>

                    <dl class="row px-4 px-md-0">
                        <dt class="col-5 responsive-font">Last Online</dt>
                        <dd class="col-7 responsive-font">@(isWithinLastHour ? "Now" : lastActive.ToString("MMM dd, yyyy"))</dd>

                        <dt class="col-5 responsive-font">Gender</dt>
                        <dd class="col-7 responsive-font">@Model.Gender</dd>

                        <dt class="col-5 responsive-font">Birthday</dt>
                        <dd class="col-7 responsive-font">
                            @(Model.Birthday > DateTime.MinValue 
                                ? Model.Birthday.ToString("MMM dd, yyyy") 
                                : "-")
                        </dd>

                        <dt class="col-5 responsive-font">Location</dt>
                        <dd class="col-7 responsive-font">@(
                            Model.Address != null && 
                            !string.IsNullOrWhiteSpace(Model.Address.City) && 
                            !string.IsNullOrWhiteSpace(Model.Address.Country)
                                ? $"{Model.Address.City}, {Model.Address.Country}" 
                                : "-"
                        )</dd>

                        <dt class="col-5 responsive-font">Joined</dt>
                        <dd class="col-7 responsive-font">@Model.CreatedAt.ToString("MMM dd, yyyy")</dd>
                    </dl>

                    <hr class="my-3"/>

                    <!-- Social Links -->
                    <div class="d-flex justify-content-around align-items-center my-0 py-0">
                        @if (!string.IsNullOrWhiteSpace(Model.XSocialLink))
                        {
                            <a href="@Model.XSocialLink" target="_blank" rel="noopener" aria-label="Twitter">
                                <i class="fab fa-twitter social-icon"></i>
                            </a>
                        }

                        @if (!string.IsNullOrWhiteSpace(Model.InstagramSocialLink))
                        {
                            <a href="@Model.InstagramSocialLink" target="_blank" rel="noopener" aria-label="Instagram">
                                <i class="fab fa-instagram social-icon"></i>
                            </a>
                        }

                        @if (!string.IsNullOrWhiteSpace(Model.FacebookSocialLink))
                        {
                            <a href="@Model.FacebookSocialLink" target="_blank" rel="noopener" aria-label="Facebook">
                                <i class="fab fa-facebook social-icon"></i>
                            </a>
                        }

                        @if (!string.IsNullOrWhiteSpace(Model.YoutubeSocialLink))
                        {
                            <a href="@Model.YoutubeSocialLink" target="_blank" rel="noopener" aria-label="YouTube">
                                <i class="fab fa-youtube social-icon"></i>
                            </a>
                        }

                        @if (!string.IsNullOrWhiteSpace(Model.TwitchSocialLink))
                        {
                            <a href="@Model.TwitchSocialLink" target="_blank" rel="noopener" aria-label="Twitch">
                                <i class="fab fa-twitch social-icon"></i>
                            </a>
                        }
                    </div>
                }

            </div>

            <hr class="my-1"/>

            <!-- Profile Stats -->
            <div class="bg-light text-dark rounded p-2">
                @if (isOwner || (!isOwner && Model.IsPublic))
                {
                    <h4 class="text-center text-md-start col-12 mb-3 ">Statistics</h4>
                    <dl class="row px-4 px-md-0">
                        <dt class="col-8 responsive-font">Games Tracked</dt>
                        <dd class="col-4 responsive-font">@Model.GamesTracked</dd>

                        <dt class="col-8 responsive-font">Completed</dt>
                        <dd class="col-4 responsive-font">@Model.GamesCompleted</dd>

                        <dt class="col-8 responsive-font">Playing</dt>
                        <dd class="col-4 responsive-font">@Model.GamesPlaying</dd>

                        <dt class="col-8 responsive-font">On Hold</dt>
                        <dd class="col-4 responsive-font">@Model.GamesOnHold</dd>

                        <dt class="col-8 responsive-font">Dropped</dt>
                        <dd class="col-4 responsive-font">@Model.GamesDropped</dd>

                        <dt class="col-8 responsive-font">Planned</dt>
                        <dd class="col-4 responsive-font">@Model.GamesPlanned</dd>

                        <dt class="col-8 responsive-font">Wishlist</dt>
                        <dd class="col-4 responsive-font">@Model.GamesWishList</dd>

                        <dt class="col-8 responsive-font">Reviews</dt>
                        <dd class="col-4 responsive-font">@Model.GameReviewsCount</dd>

                        <dt class="col-8 responsive-font">Followers</dt>
                        <dd class="col-4 responsive-font">@Model.FollowersCount</dd>

                        <dt class="col-8 responsive-font">Following</dt>
                        <dd class="col-4 responsive-font">@Model.FollowingCount</dd>
                    </dl>
                }
            </div>

        </div>

        <!-- Right Main Content -->
        <div class="col-md-9 d-flex flex-column gap-3">
            @if (isOwner || (!isOwner && Model.IsPublic))
            {
                    <!-- Profile Message -->
                    <div class="p-3 border rounded bg-light text-dark" style="min-height: 120px; max-height: 200px; overflow-y: auto;">
                        @if (Model.IsPublic)
                        {
                            @if (!string.IsNullOrWhiteSpace(Model.ProfileMessage))
                            {
                                <p>@Model.ProfileMessage</p>
                            }
                        }
                    </div>

                    <!-- Game List -->
                    <div>
                        <ul class="nav nav-tabs mb-3 bg-light-subtle rounded" id="profileTab" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="games-tab" data-bs-toggle="tab" data-bs-target="#games"
                                        type="button" role="tab" aria-controls="games" aria-selected="true">
                                    Game List
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="favorites-tab" data-bs-toggle="tab" data-bs-target="#favorites" type="button" role="tab" aria-controls="favorites" aria-selected="false">
                                    Favorites
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">
                                    Reviews
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="following-tab" data-bs-toggle="tab" data-bs-target="#following" type="button" role="tab" aria-controls="following" aria-selected="false">
                                    Following
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="followers-tab" data-bs-toggle="tab" data-bs-target="#followers" type="button" role="tab" aria-controls="followers" aria-selected="false">
                                    Followers
                                </button>
                            </li>
                        </ul>

                        <div class="tab-content" id="profileTabContent">
                            <!-- Game List Tab -->
                            <div class="tab-pane fade show active" id="games" role="tabpanel" aria-labelledby="games-tab">
                                <!-- Filters -->
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div>
                                        <label class="form-label me-2">Filter by Status:</label>
                                        <select id="gameStatusFilter" class="form-select d-inline-block w-auto">
                                            <option value="">All</option>
                                            @foreach (var status in Enum.GetNames(typeof(MyGameShelf.Domain.Enums.GameStatus)))
                                            {
                                                <option value="@status">@status</option>
                                            }
                                        </select>
                                    </div>

                                    <div>
                                        <label class="form-label me-2">Sort By:</label>
                                        <select id="gameSortFilter" class="form-select d-inline-block w-auto">
                                            <option value="added">Recently Added</option>
                                            <option value="name">Name</option>
                                            <option value="rating">Rating</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Loader -->
                                <div id="gameStatusLoading" class="text-center my-4" style="display:none;">
                                    <div class="spinner-border text-primary" role="status"></div>
                                </div>

                                <!-- AJAX-loaded game list -->
                                <div id="gameStatusResult">
                                    <!-- _UserGamesTab.cshtml will be injected here -->
                                </div>
                            </div>

                            <!-- Favorites Tab -->
                            <div class="tab-pane fade" id="favorites" role="tabpanel" aria-labelledby="favorites-tab">
                               <!-- Filters -->
                                <div class="d-flex justify-content-end align-items-center mb-3">      
                                    <div>
                                        <label class="form-label me-2">Sort By:</label>
                                        <select id="favoriteSortFilter" class="form-select d-inline-block w-auto">
                                            <option value="added">Recently Added</option>
                                            <option value="name">Name</option>
                                            <option value="rating">Rating</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Loader -->
                                <div id="favoriteGameStatusLoading" class="text-center my-4" style="display:none;">
                                    <div class="spinner-border text-primary" role="status"></div>
                                </div>

                                <!-- AJAX-loaded game list -->
                                <div id="favoriteGameStatusResult">
                                    <!-- _UserFavoritesTab.cshtml will be injected here -->
                                </div>
                            </div>

                            <!-- Reviews Tab -->
                            <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                                <!-- Filters -->
                                <div class="d-flex justify-content-end align-items-center mb-3">
                                    <div>
                                        <label class="form-label me-2">Sort By:</label>
                                        <select id="reviewSortFilter" class="form-select d-inline-block w-auto">
                                            <option value="added">Recently Added</option>
                                            <option value="name">Name</option>
                                            <option value="rating">Rating</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Loader -->
                                <div id="reviewsLoading" class="text-center my-4" style="display:none;">
                                    <div class="spinner-border text-primary" role="status"></div>
                                </div>

                                <!-- AJAX-loaded game list -->
                                <div id="reviewsResult">
                                    <!-- _ReviewTab.cshtml will be injected here -->
                                </div>
                            </div>

                            <!-- Following Tab -->
                            <div class="tab-pane fade" id="following" role="tabpanel" aria-labelledby="following-tab">
                                <p>Not following anyone yet.</p>
                            </div>

                            <!-- Followers Tab -->
                            <div class="tab-pane fade" id="followers" role="tabpanel" aria-labelledby="followers-tab">
                                <p>No followers yet.</p>
                            </div>
                        </div>

                    </div>
            }
            else if (!isOwner && !Model.IsPublic)
            {
                <div>
                    <i class="fa-solid fa-lock"></i> This profile is private.
                </div>
            }
        </div>

    </div>
</div>

@section Scripts {
    <script>
        function loadGames(page = 1) {
            const userId = '@Model.UserId';
            const status = $('#gameStatusFilter').val();
            const sort = $('#gameSortFilter').val();

            $('#gameStatusLoading').show();
            $('#gameStatusResult').hide();

            $.get('/GameList/UserGamesByFilter', {
                userId,
                status,
                sort,
                page
            }).done(function (html) {
                $('#gameStatusResult').html(html);
            }).always(function () {
                $('#gameStatusLoading').hide();
                $('#gameStatusResult').show();
            });
        }

        // Handle pagination link clicks
        $(document).on('click', '.user-games-page', function (e) {
            e.preventDefault();
            const page = $(this).data('page');
            loadGames(page);

            $('html, body').animate({
                scrollTop: $('#gameStatusResult').offset().top - 100
            }, 300);
        });

        function loadReviews(page = 1) {
            const userId = '@Model.UserId';
            const sort = $('#reviewSortFilter').val();

            $('#reviewsResult').html('<p>Loading reviews...</p>');

            $.get('/GameList/UserReviews', { userId, sort, page })
                .done(function (html) {
                    $('#reviewsResult').html(html);
                })
                .fail(function () {
                    $('#reviewsResult').html('<p class="text-danger">Failed to load reviews.</p>');
                });
        }

        $(document).on('click', '.user-reviews-page', function (e) {
            e.preventDefault();
            const page = $(this).data('page');
            loadReviews(page);

            $('html, body').animate({
                scrollTop: $('#reviewStatusResult').offset().top - 100
            }, 300);
        });

        function loadFavoriteGames(page = 1)
        {
            const userId = '@Model.UserId';
            const sort = $('#favoriteSortFilter').val();

            $('#favoriteGameStatusLoading').show();
            $('#favoriteGameStatusResult').hide();

            $.get('/GameList/UserFavorites', {
                userId,
                sort,
                page
            }).done(function (html) {
                $('#favoriteGameStatusResult').html(html);
            }).always(function () {
                $('#favoriteGameStatusLoading').hide();
                $('#favoriteGameStatusResult').show();
            });
        }

        $(document).on('click', '.user-favorites-page', function (e) {
            e.preventDefault();
            const page = $(this).data('page');
            loadFavoriteGames(page);

            $('html, body').animate({
                scrollTop: $('#favoriteGameStatusResult').offset().top - 100
            }, 300);
        });

        $(document).ready(function () {
            loadGames(); // Load games by default

            // refetch games when filters changed
            $('#gameStatusFilter, #gameSortFilter').on('change', function () {
                loadGames();
            });

            $('#reviewSortFilter').on('change', function () {
                loadReviews();
            });

            $('#favoriteSortFilter').on('change', function () {
                loadFavoriteGames();
            });

            $(document).on('click', '.game-pagination a', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                loadGames(page);
            });

            $(document).on('click', '.review-pagination a', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                loadReviews(page);
            });

            $(document).on('click', '.favorite-pagination a', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                loadFavoriteGames(page);
            });

            // When the user clicks the Reviews tab, load reviews
            $('button[data-bs-target="#reviews"]').on('shown.bs.tab', function () {
                loadReviews();
            });

            // When the user clicks the Favorites tab, load reviews
            $('button[data-bs-target="#favorites"]').on('shown.bs.tab', function () {
                loadFavoriteGames();
            });

            $(document).on("click", ".favorite-toggle", function () {
                var $btn = $(this);
                var gameId = $btn.attr("data-game-id");
                var token = $('input[name="__RequestVerificationToken"]').val();

                var isFavorited = $btn.attr("data-favorited") === "true";
                isFavorited = !isFavorited;
                $btn.attr("data-favorited", isFavorited.toString());

                if (isFavorited) {
                    $btn.html('<i class="fa-solid fa-star"></i>');
                    $btn.css("color", "#FFD700");
                } else {
                    $btn.html('<i class="fa-regular fa-star"></i>');
                    $btn.css("color", "white");
                }

                // Send the toggle request to server
                $.ajax({
                    type: "POST",
                    url: "/GameList/ToggleFavoriteGame",
                    data: { gameId: gameId },
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (response) {
                        console.log("ToggleFavoriteGame response:", response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error toggling favorite:", error);

                        // Revert on error
                        isFavorited = !isFavorited;
                        $btn.attr("data-favorited", isFavorited.toString());
                        $btn.html(isFavorited
                            ? '<i class="fa-solid fa-star"></i>'
                            : '<i class="fa-regular fa-star"></i>');
                        $btn.css("color", isFavorited ? "#FFD700" : "white");
                    }
                });
            });


        });
    </script>
}
  